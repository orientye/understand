== 页表
:hardbreaks-option:

=== 页

页面交换
利用磁盘空间作为扩展内存，从而增大了可用的内存。缺页异常机制。

页面回收
用于将内存映射被修改的内容与底层的块设备同步，也称为数据回写。

=== 页表
▪ 页表用于建立用户进程的虚拟地址空间和物理内存之间的关联
▪ 内核内存管理总是假定使用四级页表，而不管底层处理器是否如此。例如IA-32默认情况下只使用两级分页系统(在不使用PAE扩展的情况下), 此时第三和第四级页表必须由特定于体系结构的代码模拟

https://github.com/torvalds/linux/blob/master/include/asm-generic/page.h
https://github.com/torvalds/linux/blob/master/arch/x86/include/asm/pgtable_64.h

▪ PGD PUD PMD PTE OFFSET:
▪ pgd_t用于全局页目录项
▪ pud_t用于上层页目录项
▪ pmd_t用于中间页目录项
▪ pte_t用于直接页表项
▪ PTE的相关信息: 例如_PAGE_DIRTY等
https://github.com/torvalds/linux/blob/master/arch/x86/include/asm/pgtable_types.h

▪ 创建与释放
例如pgd_alloc
https://github.com/torvalds/linux/blob/master/arch/x86/include/asm/pgalloc.h

▪ TLB: The process of address translation must be integrated with the operation of any hardware caches in the system. Most page table entries are located in the L1 cache, but the cost of accessing page table entries from L1 is usually eliminated by an on-chip cache of page table entries called a TLB.