= 了解assembly
:revnumber: 0.0.1
:author: orient
:homepage: http://orientye.com
:toc:
:toclevels: 5
:hardbreaks-option:
<<<

== 概念
=== 语法格式
Intel, AT&T, 各种汇编器可能有自己独特语法格式(例如NASM)

==== Intel vs. AT&T
[format="csv", options="header", separator=#]
|===
名称                       #    Intel                      # AT&T	                         # 说明
寄存器名	               # rax	                       # %rax	                         # AT&T在寄存器前加%
操作数顺序	               # 目标数在前mov rax, rdx	        # 目标数在后mov %rdx, %rax	        # 将rdx的值赋给rax
立即数                     # 原样mov rax, 6	               # 数字前加$mov $6, %rax	           #  将6赋给rax
十六进制立即数	            # 开头加0结尾加H，例如012H	      # 开头加0x，例如0x12	              # 十六进制数12
访问内存长度表示	        # 开头加BYTE/WORD/DWORD PTR	     # 结尾加b,w,l,q	                #   分别表示字节 字 双字 四字
|===

=== 指令集
x86-64, ARM

== x86_64汇编
https://github.com/0xAX/asm
系统调用: https://en.wikibooks.org/wiki/X86_Assembly/Interfacing_with_Linux
https://www.cnblogs.com/lsgxeva/p/11176000.html

=== 寻址模式
image::img/assembly/operand-forms.png[]
.Image source: Computer Systems. A Programmer’s Perspective [3rd ed.] (2016, Pearson)

=== 寄存器
https://cs.brown.edu/courses/cs033/docs/guides/x64_cheatsheet.pdf

=== 函数调用
https://wizardforcel.gitbooks.io/re-for-beginners/content/Part-VI/Chapter-64.html
https://stackoverflow.com/questions/4429398/why-does-windows64-use-a-different-calling-convention-from-all-other-oses-on-x86/
http://dbp-consulting.com/tutorials/debugging/linuxProgramStartup.html

=== 指令
- endbr64/endbr32:
https://stackoverflow.com/questions/56905811/what-does-the-endbr64-instruction-actually-do
Control-flow Enforcement Technology (CET)技术:
https://www.intel.com/content/www/us/en/developer/articles/technical/technical-look-control-flow-enforcement-technology.html

== C/C++与汇编
=== 内嵌汇编
=== 外嵌汇编
=== 反汇编

== 参考
《Low  Level Programming C, Assembly and Program Execution on Intel 64 Architecture》
https://cch123.gitbooks.io/duplicate/content/
http://www.egr.unlv.edu/~ed/assembly64.pdf

