= 最优化(Optimization)
:hardbreaks-option:
:revnumber: 0.0.1
:author: orient
:toc:
:toclevels: 5
:sectnums:
:sectnumlevels: 5
:stem: latexmath
:homepage: http://orientye.com

<<<

== 概念
=== 概括
https://zh.wikipedia.org/wiki/%E6%9C%80%E4%BC%98%E5%8C%96

最优化问题(也称优化问题)泛指定量决策问题，主要关心如何对有限资源进行有效分配和控制，并达到某种意义上的最优。它通常需要对需求进行定性和定量分析，建立恰当的数学模型来描述该问题，设计合适的计算方法来寻找问题的最优解，探索研究模型和算法的理论性质，考察算法的计算性能等。

- 最优化问题的一般形式
- 最优化问题的类型与应用背景

== 无约束优化问题
=== 约束和无约束优化问题的基础知识
=== 一维搜索方法
=== 梯度方法
=== 牛顿法
在确定搜索方向时，最速下降法只用到了目标函数的一阶导数(梯度)。这种方式并非总是最高效的。在某些情况下，如果能够在迭代方法中引人高阶导数，其效率可能将优于最速下降法。牛顿法(有时候也称为牛顿拉弗森方法)就是如此，它同时使用一阶和二阶导数来确定搜索方向。当初始点与目标函数的极小点足够接近时牛顿法的效率确实要优于最速下降法。给定一个迭代点之后，首先构造一个二次型函数其与目标函数在该点处的一阶和二阶导数相等，以此可以作为目标函数的近似表达式;接下来求该二次型函数的极小点，以此作为下一次迭代的起始点。重复以上过程，以求得目标函数的极小点。这就是牛顿法的基本思路。如果目标函数本身就是二次型函数那么构造的近似函数与目标
函数就是完全一致的，否则如果目标函数不是二次型函数那么近似函数得到的极小点给出的是目标函数极小点所在的大体位置，

=== 共轭方向法
=== 拟牛顿法
=== 求解线性方程组
=== 无约束优化问题和神经网络
=== 全局搜索算法

== 线性规划
=== 线性规划概述
=== 单纯形法
=== 对偶
=== 非单纯形法
=== 整数规划

== 有约束的非线性优化问题
=== 仅含等式约束的优化问题
=== 含不等式约束的优化问题

=== 凸优化(Convex Optimization)
==== 概念
https://zh.wikipedia.org/wiki/%E5%87%B8%E5%84%AA%E5%8C%96

=== 有约束优化问题的求解算法

=== 多目标优化

== 参考
《An Introduction to Optimization, 4th》 中:《最优化导论》第四版
《最优化：建模、算法与理论》
《最优化理论与方法》
《Optimization Model》
《Numerical Optimization》
《Linear and Nonlinear Programming, 4th》
《Introduction to Linear Optimization》
《Nonlinear Programming》
《Convex Optimization》 中:《凸优化》
《Lectures on Modern Convex Optimization》
《Convex Optimization in signal and communication》