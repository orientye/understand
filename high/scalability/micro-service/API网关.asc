:toc:
:toclevels: 5
:hardbreaks-option:

== API网关

保护, 增强和控制对于API服务的访问

=== 功能需求
- 请求接入: 作为所有API接口服务请求的接入点，管理所有的接入请求
- 业务聚合: 作为所有后端业务服务的聚合点，所有的业务服务都可以在这里被调用
- 中介策略: 实现安全、验证、路由、过滤、流控、缓存等策略，进行一些必要的中介处理
- 统一管理: 提供配置管理工具，对所有API服务的调用生命周期和相应的中介策略进行统一管理

=== 流量网关
全局性的、跟具体的后端业务系统和服务完全无关的策略网关，即为流量网关。
流量网关关注全局流量的稳定与安全，比如防止各类SQL注入、黑白名单控制、接入请求到业务系统的负载均衡等，通常有如下通用性的具体功能:

    全局性流控
    日志统计
    防止SQL注入
    防止Web攻击
    屏蔽工具扫描
    黑白名单控制

=== 业务网关
针对具体的后端业务系统，或者是服务和业务有一定关联性的策略网关，即为业务网关。比如，针对某个系统、某个服务或某个用户分类的流控策略，针对某一类服务的缓存策略，针对某个具体系统的权限验证方式，针对某些用户条件判断的请求过滤，针对具体几个相关API的数据聚合封装，等等。

业务网关一般部署在流量网关之后、业务系统之前，比流量网关更靠近业务系统。大部分情况下说的API网关，狭义上指的是业务网关。如果系统的规模不大，也会将两者合二为一，使用一个网关来处理所有的工作。

=== 参考选型
Nginx+Lua: Open Resty、Kong、Orange、Abtesting Gateway等
Java: Zuul/Zuul 2、Spring Cloud Gateway、Kaazing KWG、gravitee、Dromara soul等
Go: Janus、fagongzi、Grpc-Gateway
DotNET: Ocelot
Node.js: Express Gateway、MicroGateway

=== 参考
https://www.infoq.cn/article/eee1xzeic4udpbmr*03t