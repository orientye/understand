:hardbreaks-option:

=== overview
==== 概念
▪ thread-safe

▪ creation, termination, cancellation
▪ join detach
▪ once
▪ thread-specific data/thread-local storage
▪ thread-pool
▪ sleep
▪ schedule policy and priority

▪ volatile
▪ atomic
▪ cacheline
▪ memory order/fence/barrier
▪ mutex, spin lock, rw lock, semaphore...

▪ condition_variable, wait/notify, future/promise

▪ impletation
▪ signal
▪ process control

==== cpp
===== thread
https://en.cppreference.com/w/cpp/thread

===== pthread
There are around 100 threads procedures, all prefixed pthread_ and they can be categorized into four groups:

(1)Thread management - creating, joining threads etc.
(2)Mutexes
(3)Condition variables
(4)Synchronization between threads using read/write locks and barriers

The POSIX semaphore API works with POSIX threads but is not part of threads standard, having been defined in the POSIX.1b, Real-time extensions (IEEE Std 1003.1b-1993) standard. Consequently, the semaphore procedures are prefixed by sem_ instead of pthread_.

==== java
https://github.com/orientye/understand/blob/main/lan/java.asc#concurrency