== high-concurrency
:hardbreaks-option:

=== 指标
⦁ QPS
⦁ TPS
⦁ RT
⦁ 并发数 PCU
⦁ PV UV IP DAU MAU

=== Scale Up
- 目标: 提升单机处理能力
- 硬件

    ▪ CPU/GPU/FPGA/ASIC
    ▪ SMP/NUMA/MPP
    ▪ SSD

- 缓存

    ▪ 分布式缓存
    ▪ 本地缓存
    ▪ 远程缓存

- 异步

    ▪ 进程
    ▪ 线程
    ▪ 协程 
    ▪ 同步方式进行异步编程

- 延迟执行

    ▪ 排队
    ▪ 限流
    ▪ 降级
    ▪ 熔断

- 调优

    ▪ 系统层调优
        ⦁ CPU
        ⦁ 内存
        ⦁ IO
            ⦁ 网络
            ⦁ 磁盘
            ⦁ 文件
    ▪ 应用层调优
        ⦁ 算法
        ⦁ 数据库
        ⦁ 缓存
        ⦁ 并发优化
            ⦁ share/immutalbe/copy/move
            ⦁ cacheline
            ⦁ lock优化
            ⦁ lock-free
        ⦁ 池化技术
            ⦁ 连接池
            ⦁ 内存池
            ⦁ 对象池
            ⦁ 线程池  
        ⦁ 批量处理

=== Scale Out
- 目标: 多机提升整个系统处理能力
- 分布式

    ▪ 基础理论
        ⦁ 集中式与分布式
            ⦁ 时钟与事件顺序
        	⦁ failure&timeout
        	⦁ 常见异常类型: 服务器宕机/网络异常/磁盘故障 
        ⦁ CAP
        ⦁ BASE
        ⦁ 分区性
        ⦁ 可用性
        ⦁ 一致性: 2PC/3PC/PBFT/Paxos/Raft/Gossip/ZAB
        ⦁ 分布方式: 哈希/范围/数据量/一致性哈希
    ▪ 分布式文件系统
    ▪ 分布式键值系统
    ▪ 分布式表格系统
    ▪ 分布式数据库
    ▪ 分布式缓存
    ▪ 分布式消息队列
    ▪ 分布式事务

- 各层次的Scale Out

    ▪ 接入层的scaleout
    ▪ 服务层的scaleout
    ▪ Cache层的scaleout
    ▪ DB层的scaleout

- 状态

    ▪ 无状态易扩展
    ▪ 有状态不易扩展
        ⦁ 配置文件有状态
        ⦁ 内存/缓存有状态
        ⦁ DB有状态
    ▪ 带状态的服务扩展
        ⦁ 数据分区后sticky
        ⦁ 复制(同步或异步)
        ⦁ 集中式/分布式管理
    ▪ 参考: http://highscalability.com/blog/2015/10/12/making-the-case-for-building-scalable-stateful-services-in-t.html