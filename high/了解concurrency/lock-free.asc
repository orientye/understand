== lock-free

=== lock free
- https://en.wikipedia.org/wiki/Non-blocking_algorithm
- https://www.cs.cmu.edu/~410-s05/lectures/L31_LockFree.pdf

=== wait free

- Wait-Free definition: Each operation completes in a finite number of steps
- Wait-free implies lock-free
- Lock-free algorithms does not imply wait-free

    Note while loops in our lock-free algorithms…

- Wait-free synchronization much harder

    Impossible in many cases
    Usually specifiable only given a fixed number of threads

- Generally appear only in ‘hard’ real time systems

参考: https://www.cs.cmu.edu/~410-s05/lectures/L31_LockFree.pdf

参考: https://www.boost.org/doc/libs/1_76_0/doc/html/lockfree.html#lockfree.introduction___motivation.introduction__amp__terminology

=== implement

- With few exceptions, non-blocking algorithms use atomic read-modify-write primitives that the hardware must provide, the most notable of which is compare and swap (CAS). 

- Additionally, some non-blocking data structures are weak enough to be implemented without special atomic primitives. These exceptions include:

    ▪ a single-reader single-writer ring buffer FIFO, with a size which evenly divides the overflow of one of the available unsigned integer types, can unconditionally be implemented safely using only a memory barrier
    ▪ Read-copy-update with a single writer and any number of readers. (The readers are wait-free; the writer is usually lock-free, until it needs to reclaim memory).
    ▪ Read-copy-update with multiple writers and any number of readers. (The readers are wait-free; multiple writers generally serialize with a lock and are not obstruction-free).

=== correctness

=== 示例

https://github.com/facebook/folly/blob/master/folly/ProducerConsumerQueue.h (spsc, fixed capacity)
https://github.com/facebook/folly/blob/master/folly/MPMCQueue.h (mpmc, fixed capacity)

==== folly mpmc
https://cs.au.dk/~birke/papers/mpmc-queue.pdf

=== 参考
https://github.com/MattPD/cpplinks/blob/master/atomics.lockfree.memory_model.md