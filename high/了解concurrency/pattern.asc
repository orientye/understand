== pattern

=== 进程/线程
- 单个进程，单个线程(simple)
- 单个进程，多个线程(eg. mysqld)
- 多个进程，单个线程(eg. nginx)
- 多个进程，多个线程(eg. chrome)
- 协程/以上各种辅之协程

Q: redis属于哪一种

=== 并发模型
- Actors model — Erlang, Rust
- CSP — Go
- Threads — C++, Java

Q: Actor vs. CSP

=== 一般设计原则

- 优先使用消息传递而不是共享内存/尽量无状态/尽量不可变(immutable)状态

- 优先使用Socket(TCP)

- 如果必须共享状态, 尽量使用消息队列/任务队列等公用组件

- 互斥尽量使用Mutex, 并尽量使用非递归锁

    ▪ posix: PTHREAD_MUTEX_RECURSIVE, 默认非递归
    ▪ java: synchronized和java.util.concurrent.locks.ReentrantLock