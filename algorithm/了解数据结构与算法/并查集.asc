== 并查集(disjoint set/union find/merge find)

=== 思想
处理一些不交集(disjoint set, 一系列没有重复元素的集合)的合并及查询

=== 要素
- 通常有个一维数组，例如vector<int> parents, 存储各元素的root
- union: 合并两个元素的root， 如int merge(x, y, parents)
- find: 查找某个元素的root, 如int find(x, parents)

=== 优化
路径压缩
rank(秩)

=== 应用
Graph环/分组/相交/最小生成树的Kruskal算法

=== 例题

=== 参考与推荐
