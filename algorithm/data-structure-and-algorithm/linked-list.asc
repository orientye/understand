:toc:
:toclevels: 5
:hardbreaks-option:

== linked-list

=== 概要
- 虚拟头结点(dummy节点)
简化边界处理，可以避免处理空指针的情况，降低代码的复杂性。
常用在需要创建一条新链表的场景。

=== 合并
lc21e: https://leetcode.com/problems/merge-two-sorted-lists/
lc23h: https://leetcode.com/problems/merge-k-sorted-lists/

== 分隔
lc86m: https://leetcode.com/problems/partition-list/

== 单链表的倒数第k个节点
lc19m: https://leetcode.com/problems/remove-nth-node-from-end-of-list/

== 单链表的中点
lc876e: https://leetcode.com/problems/middle-of-the-linked-list/

== 环形链表
lc141e: https://leetcode.com/problems/linked-list-cycle/
lc142m: https://leetcode.com/problems/linked-list-cycle-ii/

== 链表相交
lc160e: https://leetcode.com/problems/intersection-of-two-linked-lists/

== 双链表
https://leetcode.com/tag/doubly-linked-list/
lc146m: https://leetcode.com/problems/lru-cache/
lc460h: https://leetcode.com/problems/lfu-cache/

=== 例题
https://leetcode.com/tag/linked-list/
