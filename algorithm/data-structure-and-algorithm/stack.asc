:toc:
:toclevels: 5
:hardbreaks-option:

== 栈

=== 例题
https://leetcode.com/tag/stack/
lc232e: https://leetcode.com/problems/implement-queue-using-stacks/
lc20e: https://leetcode.com/problems/valid-parentheses/
lc1047e: https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/
lc1209m: https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/
lc150m: https://leetcode.com/problems/evaluate-reverse-polish-notation/

=== 单调栈(monotonic stack)
==== 概念
A monotonic stack is a stack whose elements are monotonically increasing or decreasing.
单调栈实际上就是栈，只是利用了一些巧妙的逻辑，使得每次新元素入栈后，栈内的元素都保持有序(单调递增或单调递减)。
单调栈用途不太广泛，只处理一类典型的问题，比如下一个更大元素，上一个更小元素等。

单调栈的本质是空间换时间，因为在遍历的过程中需要用一个栈来记录右边第一个比当前元素高的元素，优点是整个数组只需要遍历一次。

使用单调栈主要有三个判断条件:
当前遍历的元素T[i]小于栈顶元素T[st.top()]的情况
当前遍历的元素T[i]等于栈顶元素T[st.top()]的情况
当前遍历的元素T[i]大于栈顶元素T[st.top()]的情况

==== 例题
https://leetcode.com/tag/monotonic-stack/
lc739m: https://leetcode.com/problems/daily-temperatures/
lc496e: https://leetcode.com/problems/next-greater-element-i/
lc503m: https://leetcode.com/problems/next-greater-element-ii/

==== 参考
https://github.com/youngyangyang04/leetcode-master#%E5%8D%95%E8%B0%83%E6%A0%88

=== 参考
https://github.com/youngyangyang04/leetcode-master#%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97
https://labuladong.gitee.io/algo/di-yi-zhan-da78c/shou-ba-sh-daeca/dui-lie-sh-88541/