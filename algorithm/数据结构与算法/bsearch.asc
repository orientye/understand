:toc:
:toclevels: 5
:hardbreaks-option:

== bsearch

=== 思想
通常是有序的数组

=== 实现
[source, cpp]
----
    int search(vector<int>& nums, int target) {
        int left = 0;
        int right = nums.size() - 1;
        
        while(left <= right) {
            int mid = (unsigned(right + left) >> 1);
            if(nums[mid] < target) {
                left = mid + 1;
            } else if(nums[mid] > target) {
                right = mid - 1;
            } else {
                return mid;
            }
        }
        
        return -1;
    }
----

=== 进阶
lc34M: https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/

=== 例题
https://leetcode.com/tag/binary-search/
lc704E: https://leetcode.com/problems/binary-search/
lc69E: https://leetcode.com/problems/sqrtx/

=== 参考
https://github.com/youngyangyang04/leetcode-master/blob/master/problems/0704.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.md