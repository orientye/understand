== 复制集
架构-复制集

作用: 高可用
附加作用： 
数据分发：将数据从一个区域复制到另一个区域，减少另一个区域的读延迟
读写分离：不用类型的压力分别在不同的节点上执行
异地容灾：在数据中心故障时候快速切换到异地

结构:
典型的复制集由3个及以上具有投票权的节点组成:
一个主主节点： 接受写入操作和选举时投票
两个/多个从节点： 复制主节点上的新数据和选举时投票
不推荐使用Arbiter(投票节点，不存储数据)


架构-复制集


架构-复制集

复制过程
oplog(operations log), 后台线程

Q: 是否存在同步延迟？

选举过程
心跳
RAFT
最多50个节点，最多7个投票节点
使用奇数个节点

复制集参数
   "priority" : 0,
   "slaveDelay" : <seconds>,
   "hidden" : true
   "votes" : 0

注意事项


架构-复制集-Read Preference

Mode
primary(默认)
primaryPreferred
secondary
secondaryPreferred
nearest
Q: Read Preference解决什么问题
Q: Read Preference带来什么问题

Behavior
All read preference modes except primary may return stale data because secondaries replicate operations from the primary in an asynchronous 
process. Ensure that your application can tolerate stale data if you choose to use a non-primary mode.
Read preference does not affect the visibility of data; i.e. clients can see the results of writes before they are acknowledged or have propagated 
to a majority of replica set members. For details, see Read Isolation, Consistency, and Recency.
Read preference does not affect causal consistency. The causal consistency guarantees provided by causally consistent sessions for read 
operations with "majority" read concern and write operations with "majority" write concern hold across all members of the MongoDB 
deployment.

Read Preference and Transactions
Multi-document transactions that contain read operations must use read preference primary. All operations in a given transaction must route to 
the same member.

Use Case
Maximize Consistency - To avoid stale reads, use primary read preference and "majority" readConcern.
Maximize Availability - To permit read operations when possible, use primaryPreferred. When there’s a primary you will get consistent reads , 
but if there is no primary you can still query secondaries. However, when using this read mode, consider the situation described in secondary vs 
secondaryPreferred.
Maximize Response Speed - nearest. The driver or mongos will read from the nearest member and those no more than 15 milliseconds further 
away than the nearest member.nearest does not guarantee consistency

Tag


架构-复制集-Read Preference

Read Preference(driver/client option)

eg.