== 分片
架构-Sharding

特点:
应用全透明，无需特殊处理
数据自动均衡
动态扩容，无需下线
提供三种分片方式: 基于Hash, 基于范围，基于zone/tag

缺点:
分片额外消耗较大
管理复杂
尽量不要用分片


架构-Sharding

mongos: 
提供集群单一入口 
转发应用请求
选择合适数据节点进行读写
合并多个数据节点的返回

无状态
建议至少2个

配置节点:
提供集群元数据存储
分片数据的数据分布

普通复制集架构

数据节点:
以复制集为单位
横向扩展
最大1024分片
分片之间数据不重复
所有分片在一起才可完整工作


架构-Sharding-概念

片键: shard key
文档中的一个/几个字段构成
Q: 一个collection能有多个shard key吗？

文档: doc/document
包含片键的一行数据

块: chunk
包含多个文档
blance以块为单位

片: sharding
包含多个块

(分片)集群: (sharded) cluster
包含多个片


架构-Sharding-设计

分片标准：是否需要分片 
分片数量：需要多少分片
分片方式

选择需要分片的表
选择正确的片键

应用层的考虑
        是否需要跨机房
        是否需要容灾
        高可用的要求
硬件层的考虑


架构-Sharding-分片标准

数据量： 一个分片尽量不要超过2TB

索引： 常用索引必须容纳进内存

瓶颈： 出现CPU，内存，磁盘等瓶颈


架构-Sharding-分片数量

x： 存储总量/单服务器可挂载容量                例如: 8TB/2TB=4
y： 工作集大小/(单服务器内存大小*0.6)       例如: 500G/(256G*0.6)=4
      TIP: 工作集: 热数据+索引
z :  并发总量/(单服务器并发量 *0.7)              例如: 30000/(9000*0.7)=6

粗略估计下的分片个数：max(x, y, z) 


架构-Sharding-分片方式

Hash

优点：
        数据分布均匀
        优化写
缺点：
        范围查询效率差

适用场景：
        日志，物联网等高并发场景


架构-Sharding-分片方式

Range

优点：
        对范围查询友好
        优化读
缺点：
        数据可能分布不均匀
        容易有热点
 


架构-Sharding-分片方式

Zone

应用场景：
Isolate a specific subset of data on a specific set of shards.
Ensure that the most relevant data reside on shards that are geographically closest 
to the application servers.
Route data to shards based on the hardware / performance of the shard hardwar


架构-Sharding-片键选择

取值基数(cardinality)
        例如， 年龄（0-120）作为片键，则最多有120个chunk
        随着数据的增多，块会越变越大
        太大的块，会导致水平扩展时移动块越来越困难
        因此，取值基数一定要大

取值分布(distribution)
        尽量均匀
   
分散写，集中读

被尽可能多的业务场景使用到

避免单调递增/单调递减的片键
Q: why?

注意事项: Starting in MongoDB 4.2, you can update a document’s shard key value unless the shard key field is the immutable _id field. Before MongoDB 4.2, a document’s shard key field value is immutable.
参考: https://docs.mongodb.com/manual/reference/method/db.collection.update/#shard-key-modification