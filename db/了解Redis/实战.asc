:toc:
:toclevels: 4
:hardbreaks-option:

== 实战

=== 与DB的关系
- 场景: 读多写少

- 读流程:
    读取缓存中是否有相关数据
    如果hit, 返回数据
    否则miss, 从DB中读取，然后放入缓存

- 写流程: 

    更新缓存:
        数据库和缓存都要写入
        不会增加一次miss
        复杂些

    淘汰缓存:
        只会写入数据库
        会增加一次miss
        简单些
        优先选择

        先操作数据库，还是先操作缓存?
        看谁的影响小
        一般来说, 先操作缓存, 再操作数据库

- 服务接口化

Q: 能用作持久化吗?

=== 缓存穿透
- 缓存和数据库中都没有的数据，而用户不断发起请求，这时的用户很可能是攻击者，攻击会导致数据库压力过大

- 接口层增加校验, 如用户鉴权校验

- 将key-value对写为key-null，缓存有效时间可以设置短点，如30秒(设置太长会导致正常情况也没法使用)

=== 缓存击穿
- 缓存击穿是指缓存中没有但数据库中有的数据（一般是缓存时间到期），这时由于并发用户特别多，同时读缓存没读到数据，又同时去数据库去取数据，引起数据库压力瞬间增大，造成过大压力

- 击穿与雪崩的区别即在于击穿是对于特定的热点数据来说，而雪崩是全部数据。

- 二级缓存：对于热点数据进行二级缓存，并对于不同级别的缓存设定不同的失效时间，则请求不会直接击穿缓存层到达数据库

- 热点数据永不过期

=== 缓存雪崩
- 当缓存服务器重启或者大量缓存集中在某一个时间段失效，会给后端系统(比如DB)带来很大压力，造成数据库后端故障，从而引起应用服务器雪崩

- 交错失效时间

- 提高HA

- 控制请求，重建缓存

- 熔断 隔离 限流

=== 慢查询日志
- SLOWLOG GET
- CONFIG SET slow-log-slower-than 0  (u seconds)
- CONFIG SET slowlog-max-len 5

=== 大key问题
https://www.modb.pro/db/103715
https://mp.weixin.qq.com/s?__biz=Mzg2NTEyNzE0OA==&mid=2247483677&idx=1&sn=5c320b46f0e06ce9369a29909d62b401&chksm=ce5f9e9ef928178834021b6f9b939550ac400abae5c31e1933bafca2f16b23d028cc51813aec&scene=21#wechat_redirect
https://www.getui.com/college/2019100911