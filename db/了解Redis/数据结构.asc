:toc:
:toclevels: 4
:hardbreaks-option:

== 数据结构

=== sds
▪ simple dynamic string
https://github.com/redis/redis/blob/unstable/src/sds.h
typedef char *sds;

▪ VS. c char
获取len O(1)
杜绝缓冲区溢出
减少修改长度时的内存分配次数: <1M *2   >1M +1M
二进制安全
兼容部分c字符串函数

▪ 作用
所有的Key
涉及到字符串的Value

=== double linked list
▪ 双端链表
adlist.h/list

▪ 作用
list, 发布订阅，慢查询，监视器等

=== dict
▪ 哈希表
dict.h/dict

▪ 作用
数据库; 哈希键

▪ 哈希算法
hashfunction() & sizemask
siphash.c
当字典被用作数据库或者哈希键的底层实现时，使用SipHash（之前是MurmurHash2， murmur2 and murmur3 are both easy to 
attack, as there are algorithms which can quickly generate arbitrarily many keys that all hash to the same value regardless of what the seed is）

▪ 解决冲突
链地址法(separate chainning), 同时新节点添加到表头

▪ rehash
过程： hash表扩容/收缩，然后切换hash表的过程
扩容时机: server.rdb_child_pid == -1 && server.aof_child_pid == -1
_dictExpandIfNeeded
dict_force_resize_ratio=5
收缩时机: factor < 0.1?

▪ 渐进式hash
rehash的过程是渐进式的
delete, find, update是在ht[0], ht[1]上都要进行的，例如查找，先查ht[0], 查不到再查ht[1]
新增则只在ht[1]上进行

=== skiplist
▪ 跳跃表
server.h/zskiplist
查找：平均O(lgN), 最坏O（N）

▪ 作用
实现有序集合键(zset)
集群节点中用作数据结构等

https://zhuanlan.zhihu.com/p/23370124

=== intset
▪ 整数集合
intset.h/intset
本质上是一个数组: 有序，无重复
编码方式:
#define INTSET_ENC_INT16 (sizeof(int16_t))
#define INTSET_ENC_INT32 (sizeof(int32_t))
#define INTSET_ENC_INT64 (sizeof(int64_t))
编码方式可能会升级

▪ 作用
实现集合键(set)

=== ziplist
▪ 压缩列表
ziplist.h/sds

▪ 连续内存
<zlbytes> <zltail> <zllen> <entry> <entry> ... <entry> <zlend>
其中每一个entry：
<prevlen> <encoding> <entry-data>
every entry in the ziplist is prefixed by metadata that contains two pieces of information. First, the length of the previous entry is stored to be able to traverse the list from back to front. Second, the entry encoding is provided. It represents the entry type, integer or string, and in the case of strings it also represents the length of the string payload.

▪ 作用
实现列表键和哈希键