:toc:
:toclevels: 5
:hardbreaks-option:

== 备份与恢复

=== 分类

    热备/在线备份，冷备/离线备份
    逻辑备份，物理备份(裸文件备份)
        逻辑备份所需要的时间比较长，因为本质上逻辑备份就是进行INSERT...SELECT...的操作
        物理备份直接备份数据库的物理表空间文件和重做日志，因此备份速度和恢复速度较快
        但物理备份只能恢复整个实例的数据，而不能按指定表进行恢复
    全量备份，增量备份

=== mysqldump
逻辑备份
mysqldump -A --single-transaction > backup.sql
-A 表示备份所有数据库
–single-transaction是必须加的参数，否则备份文件的内容不一致，这样的备份几乎没有意义。

mysqldump简单易用，单因为备份是单线程进行的，所以速度会比较慢，于是MySQL推出了mysqlpump工具:
命令mysqlpump的使用几乎与mysqldump一模一样，唯一不同的是它可以设置备份的线程数，如:
mysqlpump -A --single-transaction --default-parallelism=8 > backup.sql

线上生产环境中，不推荐使用mysqlpump，因为当备份并发线程数超过1时，它不能构建一个一致性的备份。
另外，mysqlpump的备份多线程是基于多个表的并行备份，如果数据库中存在一个超级大表，那么对于这个表的备份依然还是单线程的。那么有没有一种基于记录级别的并行备份，且支持一致性的逻辑备份工具呢？推荐使用mydumper。

=== mydumper
逻辑备份，是构建备份系统的首选工具。

特点:
支持一致性的备份；
可以根据表中的记录进行分片，从而进行多线程的备份；
对于恢复操作，也可以是多线程的备份；
可以指定单个表进行多线程的恢复。

mydumper -o /bak -r 100000 --trx-consistency-only -t 8
命令表示将备份文件保存到目录/bak下，其中:
参数-r表示每张表导出100000条记录后保存到一张表；
参数-trx-consistency-only表示一致性备份；
参数-t表示8个线程并行备份。
可以看到，即便对于一张大表，也可以以8个线程，按照每次10000条记录的方式进行备份，这样大大提升了备份的性能。

参考:
https://github.com/mydumper/mydumper

=== Clone Plugin
物理备份
MySQL 8.0.17

=== xtrabackup
物理备份
还可以增量备份
xtrabackup是Percona公司开发的一个用于MySQL数据库物理热备的备份工具。

参考:
https://docs.percona.com/percona-xtrabackup/innovation-release/
https://github.com/percona/percona-xtrabackup

=== mysqlbinlog
增量备份

全量备份时会记录备份对应的时间点位，一般是某个GTID位置，增量备份可以在这个点位后重放日志，这样就能实现基于时间点的恢复。如果二进制日志存在一些删库的操作，可以跳过这些点，然后接着重放后续二进制日志，这样就能对极端删库场景进行灾难恢复了。