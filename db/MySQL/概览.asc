:toc:
:toclevels: 5
:hardbreaks-option:

== 概览

=== 架构
----
                ┌──────────────┐
                     客户端
                └──────────────┘
    ―――――――――――――――――――――――――――――――――――――――――
                ┌──────────────┐
                     连接器                  管理连接 权限验证
                └──────────────┘
    ┌──────────────┐     ┌──────────────┐
     查询缓存(命中返回)        分析器         词法分析 语法分析
    └──────────────┘     └──────────────┘
                         ┌──────────────┐
                              优化器         执行计划生成 索引选择
                         └──────────────┘
                         ┌──────────────┐
                              执行器         操作引擎 返回结果
                         └──────────────┘
    ―――――――――――――――――――――――――――――――――――――――――
                ┌─────────────┐
                   存储引擎                  存储数据 读写接口
                └─────────────┘
----


- 连接器

	长链接
	show processlist;命令
	wait timeout 8 小时无操作后需重连
	mysql_reset_connection重新初始化连接资源(>=5.7)

- 查询缓存

	query_cache_type设置成DEMAND，然后如果需要select SQL_CACHE * from ...
	8.0已经删除了此功能

- 分析器

- 优化器

	例如多个索引时选择哪个索引，多表关联(join)时各表连接顺序

=== 存储引擎
==== innodb
(5.5.5后默认引擎)
https://dev.mysql.com/doc/refman/8.0/en/innodb-storage-engine.html

==== myisam
https://dev.mysql.com/doc/refman/8.0/en/myisam-storage-engine.html

vs. innodb:

                                                    MyISAM   InnoDB
    ----------------------------------------------------------------
    Required full-text search                        Yes      5.6.4
    ----------------------------------------------------------------
    Require transactions                                      Yes
    ----------------------------------------------------------------
    Frequent select queries                          Yes      
    ----------------------------------------------------------------
    Frequent insert, update, delete                           Yes
    ----------------------------------------------------------------
    Row locking (multi processing on single table)            Yes
    ----------------------------------------------------------------
    Relational base design                                    Yes
    Summary
    In almost all circumstances, InnoDB is the best way to go
    But, frequent reading, almost no writing, use MyISAM
    Full-text search in MySQL <= 5.5, use MyISAM

参考: https://stackoverflow.com/questions/20148/myisam-versus-innodb

==== memory
https://dev.mysql.com/doc/refman/8.0/en/memory-storage-engine.html
Q:全部是内存吗？
Each MEMORY table is associated with one disk file. The filename begins with the table name and has an extension of .frm to indicate that it stores the table definition.
即表结构存放在磁盘上。
不推荐使用:
https://dba.stackexchange.com/questions/1811/what-are-reasons-not-to-use-the-memory-storage-engine-in-mysql

==== 参考
https://dev.mysql.com/doc/refman/8.0/en/storage-engines.html

=== 更新流程
- redo log

	WAL(Write-Ahead Logging), 为了实现CrashSafe
	环形队列，循环写，空间固定会用完

- undo log

	为了实现MVCC, MVCC用于实现事物的并发与回滚

- bin log

	server层实现
	一般备库通过全量备份+bin log来实现

- 2pc

	一致性
