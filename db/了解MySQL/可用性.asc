:toc:
:toclevels: 4
:hardbreaks-option:

== 可用性

=== 备份与恢复

==== 备份
热备/在线备份， 冷备/离线备份
逻辑备份，物理备份（裸文件备份）
完全备份，增量备份，日志备份
mysqldump –-single-transaction --master-data?
xtrabackup(推荐)

==== 恢复
mysqlbinlog

=== 复制

- 复制是高性能，高可用，可扩展，灾难恢复，备份(在从库上备份以减轻主库压力)以及数据仓库等工作的基础
- 复制只能扩展读操作，无法扩展写操作，写操作只能通过分区扩展
- 复制原理

- binlog的三种格式

    statement（也叫逻辑复制,MySQL 3.23）
    row(MySQL 5.1)
    mixed

    statement的binlog可能会导致主备不一致
    row格式主要是占空间
    mixed格式会自动判断这条SQL语句是否可能引起主备一致，如果可能用row, 否则用statement

    MYSQL设置为statement不合理，至少要设置为mixed
    现在越来越多的场景要求binlog设置为row, 好处很多，例如：恢复数据

    5.7.7之前，默认STATEMENT
    5.7.7及更高版本中，默认值 ROW
    日志格式通过 binlog-format 指定，
    如 binlog-format=STATEMENT/ROW/MIXED

- binlog的两大作用: 复制; 数据恢复
- binlog的刷盘

    sync_binlog:
    如果设置为0，则表示MySQL不控制binlog的刷新，由文件系统去控制它缓存的刷新；
    如果设置为不为0的值，则表示每sync_binlog次事务，MySQL调用文件系统的刷新操作刷新binlog到磁盘中。
    设为1是最安全的，在系统故障时最多丢失一个事务的更新，但是会对性能有所影响。也有为了性能设置为100-1000中的某个值。
    5.7.7之前默认值 是0，5.7.7和更高版本使用默认值1

- 拓扑结构

    一主一/多丛
    主主（主动-主动模式）- 强烈不推荐
    主主（主动-被动模式）
    拥有备库的主主结构
    环形复制 - 不推荐
    主库，分发主库，及备库
    树或金字塔形
    定制的复制方案:
        选择性复制: -replicate_wild_do_table
        分离功能等
    现在用的比较多的是主主

- 同步异步

    <5.5(2010年前)   异步复制  
    5.5  半同步复制
    5.7.17(2016年)    全同步复制 Group Replication

=== 架构

- 方案: db-connection pool / API

- 方案: MM/MS+ vip

- 方案: MMM

- 方案: MHA(+中间件)

- 方案: Orchestrator(+中间件)

- 未来方向: 基于分布式协议（基于MGR等）

- 方案：MM + keepalive(网易)

    自研的切换脚本进行自定义故障判定以及升主的一致性检查功能。一次完整的故障切换包含如下几个步骤：首先利用Master上的keepalive定时调用故障检查check脚本，发现异常后进行3次重试，重试后MySQL依然无法正常服务则触发切换。切换stop keepalive来触发slave抢占VIP，升级为主。升级为主后slave keepalive会调用升主检查脚本，判定relay log应用完成后才放开写，关闭read only正式提供服务。
    具备一致性检验功能（检查relay log是否应用完），配合杭研改进的semisync 功能，可以保障数据的强一致；
    具备防网络抖动功能，不会在网络不稳定的情况下频繁切换；
    原主恢复后不自动升级为master功能（MySQL复制延迟）；
    自定义故障判定规则，贴近业务的高可用
    简单易用，方便管理，可以人工介入。
    Keepalived使用注意事项
    现象：keepalived主从切换后，网关/交换机上的arp表没有立刻更新VIP对应备用 LVS 的mac，或者arp包被交换机drop掉，导致备机无法被访问。
    解决：
    arping -I eth1 -c 5 -s VIP GATEWAY
    garp_master_refresh 选项 (Release 1.2.10)
    Keepalived 不抢占的实现
    Keepalived自带nopreempt参数实现不抢占功能，但当新主服务再挂掉后由于原主带nopreempt参数，即使原主优先级高仍无法完成切换。故现在通过自定义脚本实现类似功能（sudo /etc/init.d/keepalived stop），备机节点脚本只有当自身 MySQL可用且主机MySQL不可用时才触发切换。
    Keepalive这套方案在网易内部主要用在一些负载比较小，但是对稳定性和可靠性要求比较高的数据库，比如openresty等云计算服务的元数据库，易信朋友圈数据库，也已经在线上稳定运行了3，4年的时间，可以做到秒级别的切换。

- 案例: MMM（美团2015年前）

- 案例: MHA+ 中间件（美团2015后）
    
    https://tech.meituan.com/2017/06/29/database-availability-architecture.html

- 案例: github(多数据中心)