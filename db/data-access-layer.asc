= data-access-layer
:hardbreaks-option:
:toc:
:sectnums:
:revnumber: 0.0.2
:revdate: 2020年10月25日
:author: orient
:homepage: http://orientye.com

<<<

== java
=== hibernate
==== 优缺点
- 优点
Hibernate API本身没有侵入性，业务逻辑感知不到Hibernate的存在，也不需要继承任何Hibernate包中的接口
Hibernate默认提供一级缓存、二级缓存(一级缓存默认开启，二级缓存需要配置开启)
Hibernate提供了延迟加载的功能，可以避免无效查询
Hibernate提供了由对象模型自动生成数据库表的逆向操作

- 缺点
很难修改Hibernate生成的SQL语句。在一些场景中，数据库设计非常复杂，表与表之间的关系错综复杂，Hibernate引擎生成的SQL语句会非常难以理解，要让生成的SQL语句使用正确的索引更是难上加难，这就很容易生成慢查询SQL
另外，在一些大数据量、高并发、低延迟的场景中，Hibernate在性能方面带来的损失就会逐渐显现出来

==== 参考
https://hibernate.org/orm/documentation/
https://hibernate.github.net.cn/

=== spring-data-jpa
==== JPA
Java Persistence API规范，JPA是在JDK 5.0后提出的Java持久化规范(JSR 338)。
JPA规范整合了市面上已有的ORM框架，结束了Hibernate、EclipseLink、JDO等ORM框架各自为战的割裂局面，从而简化了Java持久层开发。

JPA从现有的ORM框架中借鉴了很多优点，Hibernate创始人同时也参与了JPA规范的编写，因此在JPA规范中可以看到很多与Hibernate类似的概念和设计。

市面上的ORM框架，例如Hibernate、EclipseLink等都提供了符合JPA规范的具体实现。

JPA有三个核心部分：ORM映射元数据、操作实体对象API和面向对象的查询语言(JPQL)。

==== Spring Data JPA
Spring Data JPA是符合JPA规范的一个Repository层的实现。
Spring Data JPA抹平了各个ORM框架的差异，可以让上层业务无缝地切换ORM实现框架。

==== 参考
https://github.com/spring-projects/spring-data-jpa
https://javarevisited.blogspot.com/2023/03/differences-between-jpa-hibernate-and.html

=== MyBatis
==== 特点
相较于Hibernate和各类JPA实现框架更加轻量级、更加灵活可控:
可以在MyBatis的Mapper映射文件中，直接编写原生的SQL语句: 优化索引，控制结果集中的列(这在列比较多的时候能起到一定的优化效果，Hibernate也能实现这种效果，需要在实体类添加对应的构造方法)
MyBatis提供了强大的动态SQL功能，只需要在映射配置文件中编写好动态SQL语句，MyBatis就可以根据执行时传入的实际参数值拼凑出完整的、可执行的SQL语句

对比:
从性能角度来看，Hibernate、Spring Data JPA在对SQL语句的掌控、SQL手工调优、多表连接查询等方面，不及MyBatis直接使用原生SQL语句方便、高效；
从可移植性角度来看，Hibernate屏蔽了底层数据库方言，Spring Data JPA屏蔽了ORM的差异，而MyBatis因为直接编写原生SQL，会与具体的数据库完全绑定(但实践中很少有项目会来回切换底层使用的数据库产品或ORM框架)；
从开发效率角度来看，Hibernate、Spring Data JPA处理中小型项目的效率会略高于MyBatis。

==== 概要
https://mybatis.org/mybatis-3/zh_CN/index.html
generator: https://mybatis.org/generator/
https://mybatis.org/mybatis-3/index.html#
https://github.com/mybatis/spring
https://tech.meituan.com/2018/01/19/mybatis-cache.html

==== mybatis-plus
https://mybatis.plus/en/
https://github.com/baomidou/mybatis-plus
示例: https://github.com/CodingDocs/springboot-guide/blob/master/docs/MyBatisPlus.md
参考: https://www.zhihu.com/question/279766037

==== 分库分表
https://www.cnblogs.com/mumuxinfei/p/9371986.html
https://github.com/colddew/shardbatis
https://blog.csdn.net/weixin_42109200/article/details/117466982

==== 参考
https://github.com/mybatis

=== sagacity-sqltoy
https://github.com/sagframe/sagacity-sqltoy

=== ObjectiveSql
https://github.com/braisdom/ObjectiveSql

=== guava
https://github.com/google/guava/wiki/CachesExplained

=== ehcache
https://github.com/ehcache

== go
=== gorm
https://github.com/go-gorm/gorm

== c#
https://www.cnblogs.com/Can-daydayup/p/15911410.html
https://github.com/topics/orm?l=c%23
https://github.com/topics/data-access-layer?l=c%23

== nodejs
=== sequelize
https://github.com/sequelize/sequelize

== c++
https://www.codesynthesis.com/products/odb/
https://github.com/silverqx/TinyORM

== 参考
