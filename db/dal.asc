= data-access-layer
:hardbreaks-option:
:toc:
:sectnums:
:revnumber: 0.0.2
:revdate: 2020年10月25日
:author: orient
:homepage: http://orientye.com

<<<

== java
=== spring-data-jpa
https://github.com/spring-projects/spring-data-jpa
https://javarevisited.blogspot.com/2023/03/differences-between-jpa-hibernate-and.html

=== hibernate
==== 优缺点
- 优点
Hibernate API本身没有侵入性，业务逻辑感知不到Hibernate的存在，也不需要继承任何Hibernate包中的接口
Hibernate默认提供一级缓存、二级缓存(一级缓存默认开启，二级缓存需要配置开启)
Hibernate提供了延迟加载的功能，可以避免无效查询
Hibernate提供了由对象模型自动生成数据库表的逆向操作

- 缺点
很难修改Hibernate生成的SQL语句。在一些场景中，数据库设计非常复杂，表与表之间的关系错综复杂，Hibernate引擎生成的SQL语句会非常难以理解，要让生成的SQL语句使用正确的索引更是难上加难，这就很容易生成慢查询SQL
另外，在一些大数据量、高并发、低延迟的场景中，Hibernate在性能方面带来的损失就会逐渐显现出来

==== 参考
https://hibernate.org/orm/documentation/

=== MyBatis
https://mybatis.org/mybatis-3/zh_CN/index.html
generator: https://mybatis.org/generator/
https://mybatis.org/mybatis-3/index.html#
https://github.com/mybatis/spring
https://tech.meituan.com/2018/01/19/mybatis-cache.html
https://github.com/mybatis/mybatis-3

mybatis-plus:
https://mybatis.plus/en/
https://github.com/baomidou/mybatis-plus
示例: https://github.com/CodingDocs/springboot-guide/blob/master/docs/MyBatisPlus.md
参考: https://www.zhihu.com/question/279766037

分库分表:
https://www.cnblogs.com/mumuxinfei/p/9371986.html
https://github.com/colddew/shardbatis

相似:
https://github.com/sagframe/sagacity-sqltoy

=== ObjectiveSql
https://github.com/braisdom/ObjectiveSql

=== guava
https://github.com/google/guava/wiki/CachesExplained

=== ehcache
https://github.com/ehcache

== go
=== gorm
https://github.com/go-gorm/gorm

== c#
https://www.cnblogs.com/Can-daydayup/p/15911410.html
https://github.com/topics/orm?l=c%23
https://github.com/topics/data-access-layer?l=c%23

== 参考
