= unity3d
:revnumber: 0.0.1
:author: orient
:homepage: http://orientye.com
:toc:
:toclevels: 5
:hardbreaks-option:
<<<

== script
https://docs.unity3d.com/Manual/scripting-backends.html

JIT: Just-In-Time，程序运行过程中进行转译
AOT: Ahead-Of-Time，提前将IL转译成机器码并且存储在文件中，这个文件不能完全独立运行
完全静态编译: 只支持少数平台，基于AOT进一步生成所有的机器码

IOS使用第三种，安卓和windows使用JIT(Q: 为什么不用第三种呢？)

mono: 解决C#的跨平台问题。

IL2CPP:
为了解决mono的问题，unity推出了il2cpp, 将c#转成c/c++代码，进而编译出native二进制代码。
C#的一些高级特性，比如垃圾回收，线程等，则都实现到il2cpp runtime库(il2cpp vm)上。
https://docs.unity3d.com/Manual/IL2CPP.html
https://blog.unity.com/topic/il2cpp
https://blog.unity.com/search?q=il2cpp

扩展:
https://github.com/jacksondunstan/UnityNativeScripting

浮点数的精度问题:
使用定点数

== UI
=== NGUI
NGUI vs. UGUI
https://zhuanlan.zhihu.com/p/445999150

=== UGUI
原生
如果UGUI和NGUI选一个，选UGUI

=== FGUI
跨平台
https://www.fairygui.com/

=== 参考
https://www.lfzxb.top/personal-ui-framework-consider/

== 资源
=== xasset
https://github.com/xasset/xasset

=== YooAsset
https://github.com/tuyoogame/YooAsset

=== The Addressable Asset System
https://docs.unity3d.com/Manual/com.unity.addressables.html

=== 参考
https://www.jianshu.com/p/df7cfa6d0ec3
https://docs.unity3d.com/Manual/AssetWorkflow.html
https://docs.unity3d.com/Manual/AssetBundlesIntro.html

== shader
=== 分类
1 Shaders that are part of the graphics pipeline are the most common type of shader. They perform calculations that determine the color of pixels on the screen. In Unity, you usually work with this type of shader by using Shader objects.
2 Compute shaders perform calculations on the GPU, outside of the regular graphics pipeline.
3 Ray tracing shaders perform calculations related to ray tracing.

=== 数学基础
二维笛卡尔坐标系:
在屏幕映射时，OpenGL y轴朝上，DirectX y轴朝下。

三维笛卡尔坐标系:
unity使用左手坐标系。

坐标空间:
模型空间，世界空间，观察空间，裁剪空间，屏幕空间。
其中，仅观察空间中unity使用右手坐标系，其它均使用左手坐标系。
除了这些最重要的坐标空间，实际开发中也会遇到其它空间，例如切线空间(tangent space, 通常用于法线映射)。

内置变量:
变换矩阵、摄像机和屏幕参数

=== 注意事项

=== 参考
https://docs.unity3d.com/Manual/Shaders.html

== render pipeline
https://zhuanlan.zhihu.com/p/353687806

== physical
刚体
碰撞体

== 动画
模型动画: 顶点动画与骨骼动画
非模型动画

== 导航

== 热重载
hot reload
https://www.bilibili.com/video/BV14X4y1y7mB/?vd_source=8390cf4acc81f67e6df66ea39d1fc6fe

== 热更新
=== 概览
https://zhuanlan.zhihu.com/p/535748877

=== hybridclr
https://github.com/focus-creative-games/hybridclr

== 多语言

== framework
=== gf
https://github.com/EllanJiang/GameFramework
https://www.lfzxb.top/gameframework-all/

=== et
https://github.com/egametang/ET
https://github.com/egametang/ET/tree/master/Book
https://www.lfzxb.top/et-all/

=== 参考
https://www.zhihu.com/question/268285328

== 库
=== 寻路
https://github.com/recastnavigation/recastnavigation

=== 行为树
https://github.com/meniku/NPBehave

== 工具
=== perf and profile
- Profiler
https://docs.unity3d.com/Manual/ProfilerWindow.html

- Frame Debugger
https://docs.unity3d.com/Manual/FrameDebugger.html

- 参考
https://docs.unity3d.com/Manual/Profiler.html
https://docs.unity3d.com/Manual/graphics-performance-profiling.html

=== debug
- Visual Studio
https://docs.unity3d.com/Manual/SL-DebuggingD3D11ShadersWithVS.html

- Frame Debugger
https://docs.unity3d.com/Manual/FrameDebugger.html

== 插件

== 性能优化

== 参考
https://docs.unity3d.com/cn/2023.2/Manual/Graphics.html