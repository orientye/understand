= 了解rpc
:hardbreaks-option:
:revnumber: 0.0.1
:author: orient
:toc:
:homepage: http://orientye.com
<<<

== 概述

- 服务调用方式

    同步
    异步
    并行

- 协议

- 压缩与解压

- 加密与解密

== protobuf

=== 优化
▪ capnproto
Q: capnproto不用编解码? 不用压缩？
A: 如果需要压缩, 跟protobuf的优势在哪里呢？

https://stackoverflow.com/questions/21854687/improving-performance-of-protocol-buffers
https://github.com/capnproto/capnproto

== gRPC

- 服务调用

	普通RPC调用
		同步阻塞，通常实现类xxxBlockingStub(基于proto定义生成)
		异步非阻塞，基于Future-Listener机制，通常实现类xxxFutureStub
		异步非阻塞，基于Reactive的响应编程模式，通常实现类是xxxStub

	基于HTTP/2.0的streaming调用方式
		服务端streaming: 例如短信群发功能
		客户端streaming: 例如汇总功能
		双向streaming 
即:
Unary RPC:    rpc simpleHello(Person) returns (Result) {}
Server streaming RPC:    rpc serverStreamHello(Person) returns (stream Result) {}
Client streaming RPC:     rpc clientStreamHello(stream Person) returns (Result) {}
Bidirectional streaming RPC:  rpc biStreamHello(stream Person) returns (stream Result) {}

== Thrift

== Spring Cloud

== brpc

== Dubbo

== tars

== PhxRPC

== srpc

== flare
