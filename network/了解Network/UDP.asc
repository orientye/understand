== UDP
:hardbreaks-option:

如何使用UDP

如何实现RUDP
根据场景可以分为： 尽力可靠(允许缺失)， 无序可靠， 有序可靠
如何实现可靠？ 重传！

基于UDP的P2P穿透

应用： QUIC   WebRTC

UDP

Q：  UDP数据包理想长度？
The maximum safe UDP payload is 508 bytes. This is a packet size of 576, minus the maximum 60-byte IP header and the 8-byte UDP header. 
Any UDP payload this size or smaller is guaranteed to be deliverable over IP (though not guaranteed to be delivered). Anything larger is 
allowed to be outright dropped by any router for any reason. Except on an IPv6-only route, where the maximum payload is 1,212 bytes. As 
others have mentioned, additional protocol headers could be added in some circumstances. A more conservative value of around 300-400 
bytes may be preferred instead.

Q：  UDP数据包最大长度？

根据 UDP 协议，从 UDP 数据包的包头可以看出，UDP 的最大包长度是2^16-1的个字节。由于UDP包头占8个字节，而在IP层进行封装后的IP包头占去20
字节，所以这个是UDP数据包的最大理论长度是2^16 - 1 - 8 - 20 = 65507字节

Q：  UDP会发生粘包吗？
UDP不存在粘包问题，是由于UDP发送的时候，没有经过Negal算法优化，不会将多个小包合并一次发送出去。另外，在UDP协议的接收端，采用了链式结
构来记录每一个到达的UDP包，这样接收端应用程序一次recv只能从socket接收缓冲区中读出一个数据包。也就是说，发送端send了几次，接收端必须recv
几次（无论recv时指定了多大的缓冲区）。

Q:    UDP存在发送缓冲区吗？存在接受缓冲区吗？sendto 和recvfrom如何实现的？

Q：  UDP阻塞模式下，sendto和recvfrom的表现？

Q：  UDP非阻塞模式下，sendto和recvfrom的表现？

Q：  UDP接收buffer如果小了呢？

Q：  UDP丢包如何解决？
查看网卡ifconfig eth0/ethtool -S eth0/netstat -s -u  查看有无drop, error, tx_, rx_等信息
报文错误、防火墙、UDP buffer size 不足、系统负载过高

UDP - P2P

 一, 使用STUN协议(RFC 3489)
    STUN协议即常说的UDP打洞，基本思想通过公网上安装的一个STUN server(一般有2个IP地址)充当联系人，client
首先与公网上的STUN server联系，判断自己处于内网还是公网，若处于内网，则继续与STUN server联系，判断
NAT是哪种类型，若是Cone nat则支持STUN，若是Symmetic nat则不支持以STUN形式的P2P.
    STUN最成功的案例要属skype,但STUN方案也有不足之处,主要有2点：
    1)需要额外的STUN服务器.
    2)symmetic nat无法穿透.

  二, 使用UPNP端口映射技术
    UPNP直接把一个内网端口映射到一个网关设备的外网IP的一个端口上,任何发送到外网IP的这个端口的数据,都会被
自动转发到内网映射的端口上,只要做了端口映射,就无须关心NAT地址转换所带来的麻烦,对于应用程序从端口映射过的
内网地址发出的数据,NAT会把从这个内网地址发出的数据IP头改为相应的公网IP和端口(简称IPPORT1),对方响应的数
据被发送到IPPORT1,NAT设备又会把数据传给绑定IPPORT1的内网地址. 相比于STUN,UPNP有着以下几点优势：
    1)无需额外的服务器.
    2)开发相比STUN简单.
    使用UPNP需要网关支持UPNP(现在的网关设备还没见过不支持UPNP的).
    windows系列的操作系统已经内置了UPNP的支持,并且为了方便应用程序的调用,提供了一组UPNP的com组件形式.
    emule开源项目是一个P2P共享的文件传输软件，其UPNP模块有两种形式，一是使用操作系统提供的UPNP接口，
二是使用miniupnpc(一个upnp开源项目)提供的接口，用于没有提供UPNP功能的操作系统,miniupnpc项目主页上有
支持的NAT设备清单，emule优先选择操作系统提供的UPNP接口，若失败，则尝试miniupnpc提供的接口.

UDP - QUIC

https://www.chromium.org/quic

https://en.wikipedia.org/wiki/QUIC