= http-restful-api-convention
:hardbreaks-option:
:revnumber: 0.0.1
:revdate: 2023-07-26 20:04
:author: orient
:toc:
:homepage: http://orientye.com

<<<

== 主要思想

    GET - To retrieve a resource.
    POST - To create a resource, or to execute a complex operation on a resource.
    PUT - To update a resource.
    DELETE - To delete a resource.
    PATCH - To perform a partial update to a resource.

    使用复数而不是单数
    使用名词而不是动词

== 示例
好的示例:

    GET /users                获取用户列表
    POST /users               新增一个用户
    GET /users/1001           获取某个用户
    PUT /users/1001           修改某个用户
    DELETE /users/1001        删除某个用户
    GET /users/1001/comments  获取某个用户的某部分
    PATCH /users/1001         修改某个用户的某部分

不良示例:

    GET /user/1001
    GET /listAllUsers
    POST /user/create
    PUT /updateUser/1001
    GET /userComments/1001

== 所有项

    GET /users

== 单项
- 增删改查

    POST /users               新增一个用户
    GET /users/1001           获取某个用户
    PUT /users/1001           修改某个用户
    DELETE /users/1001        删除某个用户

- 部分获取

    GET /users/1001/comments  获取某个用户的某部分
    https://developer.paypal.com/docs/api/orders/v2/#orders_get  fields(url query)

- 部分更新

    PATCH /users/1001         修改某个用户的某部分

== 条件(主键/非主键)
有三种可能的做法:

    url path
    url query
    body(不推荐使用)

=== 主键条件
使用url path:

    获取主键(id)为1001的玩家信息:
    GET /users/1001

=== 非主键条件
优先使用url query，其次是url path，原因是url query能表达复杂的条件，而url path不能。

    获取name为xyz123的玩家信息:
    GET /users?name=xyz123
    GET /users/names/xyz123

== 分页
分页使得大量数据可以更好地被呈现，防止一次性返回过多数据，影响性能和用户体验。建议使用url query进行分页:

    获取第21~40个玩家数据:
    GET /users?page=2&pagesize=20

Git Hub使用Query: https://docs.github.com/en/rest/users/users?apiVersion=2022-11-28#list-users
Paypal使用Query: https://juejin.cn/post/6844903733696921607#heading-11
参考: https://developer.paypal.com/api/rest/requests/
GET	http://localhost:8000/users/offset/{offset}/limit/{limit}	Get All Users with Paging
参考: https://oatpp.io/examples/crud/#user-service

== 排序
使用url query进行排序:

    指定返回结果按照name升序排序:
    GET /users?sortby=name&order=asc
    指定返回结果按照name升序排序，并且获取第1~20个玩家数据:
    GET /users?sortby=name&order=asc&page=1&pagesize=20

== version
建议放在header中，请求头中添加名为Accept-Version的头部字段:

    解耦合: 版本信息与API资源分开，更容易实现版本的升级和更换
    干净的URL: URL可以保持简洁，不受版本号的影响
    灵活性: 更容易地在请求中指定所需的版本号，适用于需要在不同请求中使用不同版本的情况

    携带version的header示例:
    headers = {
        'Accept-Version': 'v1'
    }

通常的做法是: (1)放在url作为path的一部分，或者(2)header
paypal放在url里path的起始位置，例如: POST /v1/vault/credit-cards
github则采用后者: https://docs.github.com/en/rest/overview/api-versions

== upsert
使用PUT，在更新资源时，如果资源不存在则创建该资源。
https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.6
https://stackoverflow.com/questions/18470588/in-rest-is-post-or-put-best-suited-for-upsert-operation

== 批处理操作与批量操作
https://apifox.com/blog/adding-batch-or-bulk-to-rest-api/
https://apifox.com/blog/batch-requests/
https://apifox.com/blog/bulk-operations/
https://juejin.cn/post/6844903733696921607#heading-91

== 结果
建议使用标准HTTP的Status返回状态码，此外还有msg(string类型)以及具体的data。

== 参考
https://docs.github.com/en/rest
https://github.com/paypal/api-standards
https://juejin.cn/post/6844903733696921607[papal]
https://developer.paypal.com/api/rest/
https://github.com/microsoft/api-guidelines
https://learn.microsoft.com/zh-cn/azure/architecture/best-practices/api-design
https://www.ruanyifeng.com/blog/2014/05/restful_api.html
https://coolshell.cn/articles/22173.html