= asio
:hardbreaks-option:
:revnumber: 0.0.1
:author: orient
:toc:
:homepage: http://orientye.com
<<<

== overview
https://www.boost.org/doc/libs/1_84_0/doc/html/boost_asio/overview.html

=== 主要思想
https://www.boost.org/doc/libs/1_84_0/doc/html/boost_asio/overview/rationale.html
https://www.boost.org/doc/libs/1_84_0/doc/html/boost_asio/overview/basics.html

=== Asynchronous Model
https://www.boost.org/doc/libs/1_84_0/doc/html/boost_asio/overview/model.html

=== Core Concepts and Functionality
https://www.boost.org/doc/libs/1_84_0/doc/html/boost_asio/overview/core.html

==== The Proactor Design Pattern: Concurrency Without Threads
https://www.boost.org/doc/libs/1_84_0/doc/html/boost_asio/overview/core/async.html

==== Threads and Boost.Asio
https://www.boost.org/doc/libs/1_84_0/doc/html/boost_asio/overview/core/threads.html

== io_context
io_context其实就相当于eventloop
鼓励one thread one loop
多个thread运行一个io_context.run(), 需要同步, 可以利用io_context::strand同步

https://www.boost.org/doc/libs/1_84_0/doc/html/boost_asio/reference/io_context.html

== coroutine

== buffer

== tutorial
https://www.boost.org/doc/libs/1_84_0/doc/html/boost_asio/tutorial.html

== examples
https://www.boost.org/doc/libs/1_84_0/doc/html/boost_asio/examples.html

== 参考
https://www.boost.org/doc/libs/1_84_0/doc/html/boost_asio.html
