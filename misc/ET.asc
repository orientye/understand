= ET
:hardbreaks-option:
:revnumber: 0.0.1
:author: orient
:toc:
:toclevels: 5
:homepage: http://orientye.com
<<<

== 代码结构
热更新
数据与方法分离
逻辑与表现分离
ECS数据驱动

== 主要思想
各类服务器进程合并
后端与机器人合并
前端与后端合并

== 协程
https://github.com/egametang/ET/blob/release9.0/Book/2.1CSharp%E7%9A%84%E5%8D%8F%E7%A8%8B.md
https://github.com/egametang/ET/blob/release9.0/Book/2.2%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%8D%8F%E7%A8%8B.md
https://github.com/egametang/ET/blob/release9.0/Book/2.3%E5%8D%95%E7%BA%BF%E7%A8%8B%E5%BC%82%E6%AD%A5.md

== Actor

    对象级别
    ET中Actor是Entity对象，Entity挂上一个MailboxComponent组件就是一个Actor了。
    只需要知道Entity的InstanceId就可以发消息给这个Entity。
    给ET服务端Game.Scene当做一个Actor，就可以变成进程级别的Actor。
    Actor本质就是一种消息机制
    这种消息机制不用关心位置，只需要知道对方的InstanceId就能发给对方。

    框架          ET                 Erlang             Skynet
    架构      多进程单线程          单进程多线程        单进程多线程
    Actor     Entity               erlang进程         lua虚拟机
    ActorId   Entity.InstanceId    erlang进程Id       服务地址

https://github.com/egametang/ET/blob/release9.0/Book/5.4Actor%E6%A8%A1%E5%9E%8B.md
https://github.com/egametang/ET/blob/release9.0/Book/5.5Actor%20Location-ZH.md

== 参考
https://github.com/egametang/ET
https://github.com/egametang/ET/tree/release9.0/Book
https://et-framework.cn/
